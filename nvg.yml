---
GENERATOR:
  PackageName: nvg
  PackageDescription: "Package nanovg provides Go bindings for nanovg.h â€” is small antialiased vector graphics rendering library for OpenGL."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  Includes: ["nanovg.h"]
  Options:
    SafeStrings: true

PARSER:
  IncludePaths: ["/usr/include", "/usr/local/include"]
  SourcesPaths: ["nanovg/src/nanovg.h"]
  Defines:
    DEBUG: 1
    NDEBUG: 1
    NANOVG_GLEW: 0
    NANOVG_GLES3: 1
    NANOVG_GLES3_IMPLEMENTATION: 1

TRANSLATOR: 
  ConstRules: 
    defines: expand
    enum: expand
  PtrTips:
    struct:
      - {target: "NVGglyphPosition", tips: [ref, 0, 0, 0]}
      - {target: "NVGtextRow", tips: [ref, ref, ref, 0, 0, 0]}
      - {target: "NVGparams", tips: [ref, 0,0,0,0,0,0,0,0,0,0,0,0,0]}
    function:
      - {target: "^nvgSave$", tips: [ref]}
      - {target: "^nvgRestore$", tips: [ref]}
      - {target: "^nvgReset$", tips: [ref]}
      - {target: "^nvgShapeAntiAlias$", tips: [ref, 0]}
      - {target: "^nvgStrokePaint$", tips: [ref, 0]}
      - {target: "^nvgFillColor$", tips: [ref, 0]}
      - {target: "^nvgFillPaint$", tips: [ref, 0]}
      - {target: "^nvgMiterLimit$", tips: [ref, 0]}
      - {target: "^nvgStrokeWidth$", tips: [ref, 0]}
      - {target: "^nvgLineCap$", tips: [ref, 0]}
      - {target: "^nvgLineJoin$", tips: [ref, 0]}
      - {target: "^nvgGlobalAlpha$", tips: [ref, 0]}
      - {target: "^nvgTransform$", tips: [ref, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgTranslate$", tips: [ref, 0, 0]}
      - {target: "^nvgRotate$", tips: [ref, 0]}
      - {target: "^nvgSkewX$", tips: [ref, 0]}
      - {target: "^nvgSkewY$", tips: [ref, 0]}
      - {target: "^nvgScale$", tips: [ref, 0, 0]}
      - {target: "^nvgTransformIdentity$", tips: [ref]}
      - {target: "^nvgCurrentTransform$", tips: [ref, ref]}
      - {target: "^nvgTransformTranslate$", tips: [ref, 0, 0]}
      - {target: "^nvgTransformScale$", tips: [ref, 0, 0]}
      - {target: "^nvgTransformRotate$", tips: [ref, 0]}
      - {target: "^nvgTransformSkewX$", tips: [ref, 0]} 
      - {target: "^nvgTransformSkewY$", tips: [ref, 0]}  
      - {target: "^nvgTransformMultiply$", tips: [ref, ref]}
      - {target: "^nvgTransformPremultiply$", tips: [ref, ref]}
      - {target: "^nvgTransformInverse$", tips: [ref, ref]}
      - {target: "^nvgTransformPoint$", tips: [ref, ref, ref, 0, 0]}
      - {target: "^nvgCreateImage$", tips: [ref, ref, ref, 0]}
      - {target: "^nvgCreateImageMem$", tips: [ref, 0, ref, 0]}
      - {target: "^nvgCreateImageRGBA$", tips: [ref, 0, 0, 0, ref]}
      - {target: "^nvgUpdateImage$", tips: [ref, 0, ref]}
      - {target: "^nvgImageSize$", tips: [ref, 0, ref, ref]}
      - {target: "^nvgDeleteImage$", tips: [ref, 0]}
      - {target: "^nvgLinearGradient$", tips: [ref, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgBoxGradient$", tips: [ref, 0, 0, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgRadialGradient$", tips: [ref, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgImagePattern$", tips: [ref, 0, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgScissor$", tips: [ref, 0, 0, 0, 0]}
      - {target: "^nvgIntersectScissor$", tips: [ref, 0, 0, 0, 0]}
      - {target: "^nvgResetScissor$", tips: [ref]}
      - {target: "^nvgBeginPath$", tips: [ref]}
      - {target: "^nvgClosePath$", tips: [ref]}
      - {target: "^nvgMoveTo$", tips: [ref, 0, 0]}
      - {target: "^nvgLineTo$", tips: [ref, 0, 0]}
      - {target: "^nvgBezierTo$", tips: [ref, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgQuadTo$", tips: [ref, 0, 0, 0, 0]}
      - {target: "^nvgArcTo$", tips: [ref, 0, 0, 0, 0, 0]}
      - {target: "^nvgPathWinding$", tips: [ref, 0]}
      - {target: "^nvgArc$", tips: [ref, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgRect$", tips: [ref, 0, 0, 0, 0, 0]}
      - {target: "^nvgRoundedRect$", tips: [ref, 0, 0, 0, 0, 0]}
      - {target: "^nvgRoundedRectVarying$", tips: [ref, 0, 0, 0, 0, 0, 0, 0, 0]}
      - {target: "^nvgEllipse$", tips: [ref, 0, 0, 0, 0]}
      - {target: "^nvgCircle$", tips: [ref, 0, 0, 0]}
      - {target: "^nvgFill$", tips: [ref]}
      - {target: "^nvgStroke$", tips: [ref]}
      - {target: "^nvgCreateFont$", tips: [ref, ref, ref]}
      - {target: "^nvgFontMem$", tips: [ref, ref, ref, 0, 0]}
      - {target: "^nvgFindFont$", tips: [ref, ref]}
      - {target: "^nvgAddFallbackFontId$", tips: [ref, 0, 0]}
      - {target: "^nvgAddFallbackFont$", tips: [ref, ref, ref]}
      - {target: "^nvgFontSize$", tips: [ref, 0]}
      - {target: "^nvgFontBlur$", tips: [ref, 0]}
      - {target: "^nvgTextLetterSpacing$", tips: [ref, 0]}
      - {target: "^nvgTextLineHeight$", tips: [ref, 0]}
      - {target: "^nvgTextAlign$", tips: [ref, 0]}
      - {target: "^nvgFontFaceId$", tips: [ref, 0]}
      - {target: "^nvgFontFace$", tips: [ref, ref]}
      - {target: "^nvgText$", tips: [ref, 0, 0, ref, ref]}
      - {target: "^nvgTextBox$", tips: [ref, 0, 0, 0, ref, ref]}
      - {target: "^nvgTextBounds$", tips: [ref, 0, 0, ref, ref, ref]}
      - {target: "^nvgTextBoxBounds$", tips: [ref, 0, 0, 0, ref, ref, ref]}
      - {target: "^nvgTextGlyphPositions$", tips: [ref, 0, 0, ref, ref, ref, 0]}
      - {target: "^nvgTextMetrics$", tips: [ref,ref, ref, ref]}
      - {target: "^nvgTextBreakLines$", tips: [ref,ref, ref, 0, ref, 0]}
      - {target: "^nvgCreateInternal$", tips: [ref]}
      - {target: "^nvgDeleteInternal$", tips: [ref]}
      - {target: "^nvgInternalParams$", tips: [ref]}
      - {target: "^nvgDebugDumpPathCache$", tips: [ref]}
      - {target: "nvg", tips: [sref,sref,sref,sref]} # defaults

  Rules:
    global:
      - {action: accept, from: "^NVG"}
      - {action: replace, from: "^NVG"}
    type:
      - {transform: export}

    function:
      - {action: accept, from: ^nvg}
      - {action: replace, from: ^nvg}
      - {transform: export}
    private:
      - {transform: unexport}


